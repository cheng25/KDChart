以下是使用 CMake 构建系统安装 KD Chart 的说明。
需要 CMake 3.3 或更高版本。

Qt 版本支持：
 * KD Chart 2.5.0 及以下版本需要 Qt4
 * KD Chart 2.5.1 至 2.7.2 版本需要 Qt4 到 Qt5.15
 * KD Chart 2.8.x 移除了 Qt4 支持（即仅支持 Qt5）
 * KD Chart 3.0 及以上版本需要 Qt5.15.0 到 Qt6.x
   （如果需要旧版 Qt5 支持，请联系 info@kdab.com）

另请注意，使用 Qt6 构建需要支持 C++17 的编译器，
而使用 Qt5 构建支持 C++11 即可。

请查看 CMakeLists.txt 文件顶部的注释，
了解可传递给 cmake 的可用配置选项。

安装目录在 Windows 上默认为 c:\KDAB\KDChart-<version>，
在非 Windows 系统上默认为 /usr/local/KDAB/KDChart-<version>。 你可以通过向 cmake 传递选项 -DCMAKE_INSTALL_PREFIX=/install/path 来更改此位置。

1) 从 KD Chart 安装的顶级目录创建一个构建目录：

     mkdir build

   然后进入该构建目录：

     cd build

2) 现在根据构建类型运行以下 'cmake' 命令之一：
     cmake -DCMAKE_BUILD_TYPE=Debug ..
     cmake -DCMAKE_BUILD_TYPE=Release ..
     cmake -DKDChart_STATIC=True -DCMAKE_BUILD_TYPE=Debug ..
     cmake -DKDChart_STATIC=True -DCMAKE_BUILD_TYPE=Release ..

   若要指定安装位置，可参考以下示例：
     cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=C:/kdchart ..
     cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/opt/kdchart ..

3) Unix

   设置 LD_LIBRARY_PATH 指向 KD Chart 安装的 lib 目录。

   如果你还没有设置 LD_LIBRARY_PATH，可在终端中运行：
    % LD_LIBRARY_PATH=/path/to/kdchart/lib:$LD_LIBRARY_PATH
    % export LD_LIBRARY_PATH

   必须将上述命令添加到你的 .bashrc 或类似文件中才能永久生效。当然，你也可以在使用 KD Reports 构建软件之前在 shell 中运行这些命令，但这种情况下设置仅在当前 shell 中有效。

4) MacOS

   操作步骤同上，但使用 DYLD_LIBRARY_PATH 代替 LD_LIBRARY_PATH

5) Windows

   若要运行可执行文件，将 KD Chart dll 文件所在路径（kdchart\bin）添加到 PATH 环境变量中。
   例如：set PATH=\path\to\kdchart\bin;%PATH%

   若要进行开发，将 KD Chart lib 文件所在路径（kdchart\lib）添加到 LIB 环境变量中。
   例如：set LIB=\path\to\kdchart\lib;%LIB%

6) 输入以下命令构建所有内容：

   从 KD Chart 顶级目录运行：

   % make    # Unix, Mac
   % nmake   # Windows

7) （可选）安装 KD Chart：

   从 KD Reports 顶级目录运行：

   % make install   # Unix, Mac
   % nmake install  # Windows

   这会将必要的文件复制到安装路径的子目录中：
   对于 Unix/Linux、Mac：/usr/local/KDAB/KDChart-VERSION/
   对于 Windows：C:\KDAB\KDChart-VERSION\

8) 查看示例应用程序。它们将帮助你开始使用 KD Chart。

== 测试 ==
若要构建测试工具，请向 CMake 传递 -DKDChart_TESTS=true 参数，如下所示：
  % cmake -DKDChart_TESTS=true

然后运行 'make test' 来执行单元测试。

== 使用 ==
在你的 CMake 项目中添加以下内容

    find_package(KDChart CONFIG REQUIRED)

如果使用 Qt6，则添加

    find_package(KDChart-qt6 CONFIG REQUIRED)

并链接到导入目标 KDChart::kdchart。
这就是你需要做的全部操作（导入目标还会包含头文件目录）

你可能还需要根据 KDChart 的安装位置设置 CMAKE_PREFIX_PATH 环境变量。
